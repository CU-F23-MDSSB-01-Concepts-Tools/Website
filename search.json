[
  {
    "objectID": "schedule.html",
    "href": "schedule.html",
    "title": "Schedule",
    "section": "",
    "text": "Developing Schedule\n\n\n\n\n\nA draft schedule will come in the first week!\nThe schedule is tentative it will be continuously updated also with readings and homework."
  },
  {
    "objectID": "literature.html",
    "href": "literature.html",
    "title": "Learning Resources",
    "section": "",
    "text": "All the materials here are freely accessible, many are community standards. The Schedule might refer to specific sections in these materials."
  },
  {
    "objectID": "literature.html#r",
    "href": "literature.html#r",
    "title": "Learning Resources",
    "section": "1 R",
    "text": "1 R\n\nR for Data Science (2nd Edition) https://r4ds.hadley.nz// by Hadley Wickham, Garrett Grolemand, Mine √áetinkaya-Rundel and the R data science community around is our core resource for self-learning data science with R using tidyverse tools.\nTidy Modeling with R https://www.tmwr.org/ by Max Kuhn and Julia Silge is the resource for learning to work with tidymodels building upon the tidyverse tools.\nPart of the course builds on or be inspired by material in Data Science in the Box https://datasciencebox.org/ by Mine √áetinkaya-Rundel and the data science education community around. You can also use the website for accompanying self-study on selected topics. ## python\nPython Data Science Handbook https://jakevdp.github.io/PythonDataScienceHandbook/ by Jake VanderPlas is a core resource for data science with python. Also there is a good video playlist https://www.youtube.com/playlist?list=PLWKjhJtqVAbkmRvnFmOd4KhDdlK1oIq23 and a 4-hour ‚Äúfull-course‚Äù video https://youtu.be/rfscVS0vtbw."
  },
  {
    "objectID": "literature.html#data-visualization",
    "href": "literature.html#data-visualization",
    "title": "Learning Resources",
    "section": "2 Data Visualization",
    "text": "2 Data Visualization\nggplot2: Elegant Graphics for Data Analysis https://ggplot2-book.org is a resource on understanding the logic of ggplot better.\nWebsites on how to decide for what visualization to choose:\nhttps://www.data-to-viz.com/\nhttps://datavizcatalogue.com/search.html"
  },
  {
    "objectID": "literature.html#mathematics",
    "href": "literature.html#mathematics",
    "title": "Learning Resources",
    "section": "3 Mathematics",
    "text": "3 Mathematics\n\nHow to read math https://www.youtube.com/watch?v=Kp2bYWRQylk"
  },
  {
    "objectID": "hw-01.html",
    "href": "hw-01.html",
    "title": "Homework 01",
    "section": "",
    "text": "Do not go through this Homework yet!\n\n\n\n\n\nThe text will be updated today!\nThe goal of this assignment is to refresh the workflow with R, RStudio, quarto, Git, and GitHub. You can replace R, RStudio with python, visual code studio. Then follow"
  },
  {
    "objectID": "hw-01.html#prerequisites",
    "href": "hw-01.html#prerequisites",
    "title": "Homework 01",
    "section": "1.1 Prerequisites",
    "text": "1.1 Prerequisites\nFirst, you need to achieve the following\n\nReview the Lecture of Week 1\nRead Happy Git with R: Why Git? Why GitHub? (It is OK do a fast read only. You may reconsider later.)\nYou have a GitHub account to become a member of the GitHub organization. If you do not have an account follow the instructions on the front page of https://github.com/CU-F23-MDSSB-01-Concepts-Tools.\nYou have provided your GitHub username in this form https://forms.office.com/e/fraU0w0gQq (If you provided your name wrongly, write an email to the instructor.)\nSoftware installations on your computer:\n\nRead Happy Git with R: Install or upgrade R and RStudio\nFollow the instructions to install R and RStudio\nRead Happy Git with R: Install Git\nFollow the instructions (choose the highly recommended) to install Git SCM (= Source Control Managment)\nInstall quarto CLI (= Command Line Interface) https://quarto.org/docs/get-started/.\nNote: In the following you will do similar things as described in Tutorial: Hello, Quarto and the following two tutorials.\n\nIn R, install some packages from the following list. You can use the command install.packages(\"tidyverse\",\"gitcreds\",\"usethis\")\nNotes: tidyverse is a collection of many packages it can take some time to install. usethis an gitcreds provide convenient functions to tell your git-installation your GitHub-credentials to push your work back to github via a Personal Access Token (PAT). Read Happy Git with R: Personal access token for HTTPS for how PATs are used similar but not identical to passwords.\n\n\n\n\n\n\n\nMore software\n\n\n\n\n\nSoon, we will need more software: python using the IDE (integrated development environment) Visual Studio Code."
  },
  {
    "objectID": "hw-01.html#terminology",
    "href": "hw-01.html#terminology",
    "title": "Homework 01",
    "section": "1.2 Terminology",
    "text": "1.2 Terminology\nWe‚Äôve already thrown around a few new terms, so let‚Äôs define them before we proceed.\n\nR and python: Names of the programming language we will be using throughout the course.\nRStudio: An integrated development environment developed for R. In other words, a convenient interface for writing and running code.\nGit: A version control system.\nGitHub: A web platform for hosting version controlled files and facilitating collaboration among users.\nquarto: A command line tool which can render (among other things) qmd-files (with text and code chunks) to nice looking html\nRepository: A Git repository contains all of your project‚Äôs files and stores each file‚Äôs revision history.\nIt‚Äôs common to refer to a repository as a repo.\n\nIn this course, assignment you work on will be contained in a personalized git repo.\nFor individual assignments, only you will have access to the repo. For team assignments, all team members will have access to a single repo where they work collaboratively.\nAll repos associated with this course are housed in the GitHub organization https://github.com/CU-F23-MDSSB-01-Concepts-Tools. The organization is set up such that students can only see repos they have access to, but the course instructors can see all of them."
  },
  {
    "objectID": "hw-01.html#starting-slowly-step-by-step",
    "href": "hw-01.html#starting-slowly-step-by-step",
    "title": "Homework 01",
    "section": "1.3 Starting slowly step by step",
    "text": "1.3 Starting slowly step by step\nAs the course progresses, you are encouraged to explore beyond what the assignments dictate; a willingness to experiment will make you a much better programmer! Before we get to that stage, however, you need to build some basic fluency in the tools and the workflow we use. First, we will explore the fundamental building blocks of all of these tools.\nBefore you can get started with the analysis, you need to make sure you:\n\nhave a GitHub account\nare a member of the course GitHub organization https://github.com/CU-F23-MDSSB-01-Concepts-Tools\nhave the needed software stack installation on your local machine (see the Prerequisites Checklist above)\n\nIf you failed to confirm any of these, it means you have not yet completed the prerequisites for this assignment. Please go back to Prerequisites and complete them before continuing the assignment."
  },
  {
    "objectID": "hw-01.html#step-0.-authenticate-git-to-access-your-github-content",
    "href": "hw-01.html#step-0.-authenticate-git-to-access-your-github-content",
    "title": "Homework 01",
    "section": "2.1 Step 0. Authenticate git to access your GitHub content",
    "text": "2.1 Step 0. Authenticate git to access your GitHub content\nBefore you can clone your repository you need to tell GitHub that you are authorized to do this, and to that end you need to make a Personal Access Token (PAT) in your GitHub account and make this available to git and RStudio on your local machine.\nThere are several ways to do this (e.g.¬†from the command line) but as we will use RStudio anyway, we can use a convenient way provided there. Read more about PATs and how to use them in Happy Git with R: Personal access token for HTTPS (in particular the TL;DR which describes what we use).\nOpen RStudio and install the packages usethis and gitcreds if you haven‚Äôt done already: Go to the ‚ÄúConsole‚Äù pane at the bottom left. Type in\ninstall.packages(c(\"usethis\",\"gitcreds\"))\nand hit Enter. Now the packages should be installed.\nNow, use two commands. Copy them to the console and click Enter:\nusethis::create_github_token()\nThis opens http://github.com and you may need to log in. Then you can make the PAT (read more details in ‚ÄúHappy Git with R‚Äù). For today, you can go the fast way and do not think about the options and click ‚ÄúGenerate token‚Äù. (If you feel safe enough you can also go for a token without an expiration day against advise from GitHub, if not you just have to do the ‚Äúdance‚Äù again when the PAT expires.)\nUse the clipboard icon üìã to copy the PAT. Go back to RStudio and do in the console:\ngitcreds::gitcreds_set()\nIn the dialog in the console paste your PAT from the clipboard and press Enter. That should be it and you do not need to repeat these steps until the PAT expires. (If the PAT expires you have to make a new one in the same way.)"
  },
  {
    "objectID": "hw-01.html#step-1.-get-url-of-repo-to-be-cloned",
    "href": "hw-01.html#step-1.-get-url-of-repo-to-be-cloned",
    "title": "Homework 01",
    "section": "2.2 Step 1. Get URL of repo to be cloned",
    "text": "2.2 Step 1. Get URL of repo to be cloned\nOn GitHub https://github.com/CU-F23-MDSSB-01-Concepts-Tools, open your repository for Homework 1.\n\nOn GitHub, click on the green Code button, select HTTPS (this might already be selected by default, and if it is, you‚Äôll see the text Use Git or checkout with SVN using the web URL). Click on the clipboard icon üìã to copy the repo URL."
  },
  {
    "objectID": "hw-01.html#step-2.-go-to-rstudio",
    "href": "hw-01.html#step-2.-go-to-rstudio",
    "title": "Homework 01",
    "section": "2.3 Step 2. Go to RStudio",
    "text": "2.3 Step 2. Go to RStudio\nGo to your RStudio. Select ‚ÄúNew Project‚Ä¶‚Äù either from the File menu or from the special project menu on the top right of the RStudio window.\n\nIn the New Project Wizard, click on ‚ÄúVersion Control‚Äù and then ‚ÄúGit‚Äù.\n\n\n\n\n\n\nImportant\n\n\n\nIf ‚ÄúVersion Control‚Äù or ‚ÄúGit‚Äù is not available in your RStudio, then either you haven‚Äôt installed git on you computer or your RStudio installation has not recognized it properly. In a correct installation RStudio would recognize git on your machine automatically when started. You have to solve this issue first to continue.\n\n\nThen paste the repositories URL (which should still be in your clipboard) into the ‚ÄúRepository URL:‚Äù field. Leave directory name as it is automatically chosen, but make sure that you create the directory in a the folder where you want to store the course material on your computer via the ‚ÄúBrowse ‚Ä¶‚Äù button.\n\n\n\n\n\n\nOrganize your Computer for your Studies!\n\n\n\n\n\n\nCreate a folder for Data Science Concepts and Tools\nPut all repos there\n\n\n\n\nWhen you click ‚ÄúCreate Project‚Äù\n\ngit will create a new directory in the folder, copies all the files from github to it, and initializes your git repository locally\nRStudio will switch to that as the new project"
  },
  {
    "objectID": "hw-01.html#step-1.-update-the-yaml",
    "href": "hw-01.html#step-1.-update-the-yaml",
    "title": "Homework 01",
    "section": "4.1 Step 1. Update the YAML",
    "text": "4.1 Step 1. Update the YAML\nOpen the quarto (qmd) file in your project. In the YAML change the author name to your name, and ‚ÄúRender‚Äù the document.\n This calls quarto, and quarto renders the document. In this case, that means, quarto creates a new file ‚Äúhw-01-R.md‚Äù in the html format as specified in the YAML.\nWhen the file was rendered successfully, RStudio shows it in the ‚ÄúViewer‚Äù pane at the bottom right. At the same place you can look in the ‚ÄúFiles‚Äù pane you can check if the file is there. You can click on it an select to show it in your Brwoser.\nNow you see a nice html-page in the Browser! You made a page like every ordinary site on the internet. So you made an important step towards publishing you data science work on the internet. However now the html page is only locally on your computer.\n\nIf you do not find the ‚ÄúRender‚Äù button in your RStudio installation, then either quarto is not installed or RStudio has not recognized. You have to fix this issue first before you can continue. Another source of error while rendering could be that you haven‚Äôt installed the tidyverse package."
  },
  {
    "objectID": "hw-01.html#step-2-commit",
    "href": "hw-01.html#step-2-commit",
    "title": "Homework 01",
    "section": "4.2 Step 2: Commit",
    "text": "4.2 Step 2: Commit\nGo to the Git pane in your RStudio (top right corner).\nYou should see that your qmd (quarto) file and its output, your html-file, are listed there as recently changed files.\nNext, click on Diff. This will pop open a new window that shows you the difference between the last committed state of the document and its current state that includes your changes. (Click on the file ‚Äúhw-01-R.qmd‚Äù.) If you‚Äôre happy with these changes, click on the checkboxes of all files in the list, and type ‚ÄúUpdate author name‚Äù in the Commit message box and hit Commit and then close the window.\n\nYou don‚Äôt have to commit after every change, this would get quite cumbersome. You should consider committing states that are meaningful to you for inspection, comparison, or restoration. In the first few assignments we may tell you exactly when to commit and what commit message to use. As the semester progresses we will let you make these decisions."
  },
  {
    "objectID": "hw-01.html#step-3.-push",
    "href": "hw-01.html#step-3.-push",
    "title": "Homework 01",
    "section": "4.3 Step 3. Push",
    "text": "4.3 Step 3. Push\nNow that you have made an update and committed this change, it‚Äôs time to push these changes to the web! Or more specifically, to your repo on GitHub.\nWhy?\nSo that others can see your changes.\nAnd by others, we mean the course instructors (your repos in this course are private to you and us, only).\nGo the Git pane and click on Push.\nThought exercise: Which of the steps ‚Äúupdating the YAML‚Äù, ‚Äúcommitting‚Äù, and ‚Äúpushing‚Äù involves talking to GitHub?1"
  },
  {
    "objectID": "hw-01.html#check-what-you-did",
    "href": "hw-01.html#check-what-you-did",
    "title": "Homework 01",
    "section": "4.4 Check what you did",
    "text": "4.4 Check what you did\nGo to your repository on https://github.com/JU-F22-MDSSB-MET-01 and check if the files appear there as in you local folder.\n\n\n\n\n\n\nNote\n\n\n\n\n\n\nYou may wonder why clicking on the the html-file does not show the page as you saw it locally in your browser.\nThe reason is, that GitHub is essentially a code editor. So, it shows you the html-code. This code was created by rendering. DO not touch it ‚Äúby hand‚Äù. It will be overwritten every time you render again.\nViewing the html as in the browser is not possible here. The instructor will clone you repository and can then look at your html locally on their machines.\nContext Information: It is possible to publish webpages from GitHub. You can learn this later.\nContext Information: GitHub provides its own gfm = GitHub Flavoured Markdown. The README.md files are written in this. gfm is very similar to the Markdown language we use."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Data Science Concepts / Data Science Tools",
    "section": "",
    "text": "Developing Syllabus\n\n\n\n\n\nThis syllabus may change during the course of the semester with some additions and clarifications.\nAll substantial changes will marked here with date."
  },
  {
    "objectID": "index.html#module-names",
    "href": "index.html#module-names",
    "title": "Data Science Concepts / Data Science Tools",
    "section": "1 Module Names",
    "text": "1 Module Names\nThis syllabus is for two modules which require each other.\n\nMDSSSB-DSOC-02 Data Science Concepts (Core area, 5 credits)\nMDSSSB-MET-01 Data Science Tools (Methods area, 5 credits)\n\nOffered in the Master program: Data Science for Society and Business (DSSB). See the module description in the DSSB Handbook."
  },
  {
    "objectID": "index.html#module-components",
    "href": "index.html#module-components",
    "title": "Data Science Concepts / Data Science Tools",
    "section": "2 Module Components",
    "text": "2 Module Components\n\nData Science Concepts (5 Credits)\nData Science Tools in R (2.5 credits)\nData Science Tools in python (2.5 credits)\n\nAll are courses offered in the Fall term and have no entry requirement.\nData Science Concepts and Data Science Tools are co-requirements.\nThe Concepts treated in the lectures are applied in exercises and homework in the Tools course."
  },
  {
    "objectID": "index.html#class-meeting-information",
    "href": "index.html#class-meeting-information",
    "title": "Data Science Concepts / Data Science Tools",
    "section": "3 Class Meeting Information",
    "text": "3 Class Meeting Information\nData Science Concepts:\nMonday 09:45-11:00 and 11:15-12:30\nLocation: East Hall Room 1 in-person\nVideo streaming in Teams provided for late-arriving students: Team F23_MDSSB-DSOC-02_Data Science Concepts, General Channel\nData Science Tools:\nThursday 09:45-11:00 and 11:15-12:30\nLocation: East Hall Room 2 in-person\nVideo streaming in Teams provided for late-arriving students: Teams F23_MDSSB-MET-01-A_Data Science Tools in R and F23_MDSSB-MET-01-B_Data Science Tools in python, General Channel\nNote: The R and python courses are provided in the same time slot. Details in the schedule."
  },
  {
    "objectID": "index.html#instructors",
    "href": "index.html#instructors",
    "title": "Data Science Concepts / Data Science Tools",
    "section": "4 Instructors",
    "text": "4 Instructors\nConcepts:\nJan Lorenz Email: jlorenz@constructor.univeristy\nTools in R:\nArmin M√ºller Email: armmueller@constructor.university\nTools in python:\nPeter Steiglechner Email: psteiglechner@constructor.university"
  },
  {
    "objectID": "index.html#format-and-workload",
    "href": "index.html#format-and-workload",
    "title": "Data Science Concepts / Data Science Tools",
    "section": "5 Format and Workload",
    "text": "5 Format and Workload\nConcepts: Lectures, sometimes with aspects of Tutorials (35 hours in presence, total expected workload 125 hours)\nTools: Tutorials, sometimes with aspects of Lectures (35 hours in presence, total expected workload 125 hours)\nBesides homework, both modules require a decent amount of self-study.\nWorkload homework and self-study is expect to be 90/125 = 72% of the total workload.\nHomework assignments are given along the concepts treated in Concepts to be solved with the tools treated in Tools."
  },
  {
    "objectID": "index.html#intended-learning-outcomes",
    "href": "index.html#intended-learning-outcomes",
    "title": "Data Science Concepts / Data Science Tools",
    "section": "6 Intended Learning Outcomes",
    "text": "6 Intended Learning Outcomes\nThe module descriptions can be found in the DSSB Handbook\n\n6.1 From the handbook\nBy the end of the Concepts module, you will be able to:\n\nunderstand and use the mathematical foundations of statistical learning algorithms\nexplain and classify data science problems\nexplain and classify data-driven approaches\nunderstand the application of data science techniques to typical situations and tasks in business and societal research, including the search, retrieval, preparation, and statistical analysis of data\ninterpret complexity analysis and performance evaluation of data science problems and algorithms\n\nBy the end of the Tools module, you will be able to:\n\nexplain basic concepts of imperative and object-oriented programming\nwrite, test, and debug programs\nperform data handling and data manipulation tasks in R and Python\napply your knowledge to implement own functions in R and Python\neffectively use core packages and libraries of R and Python for data analysis\nknow about the typical applications of R and Python in data science\nimplement and apply advanced data mining methods with appropriate tools\nperform a full cycle of data analysis\n\n\n\n6.2 Main Learning Goal\nOur main goal to help you build a good basis for your more and more independent work in the whole study program. That means you can\n\nlearn core concepts in data science on your own, for example\n\nconcepts to explore data (import, wrangle, visualize)\nlearn and explore mathematics and statistics through the data science lens\nlearn concepts to model and draw conclusions from data (model, infer, predict)\n\ncreate and maintain a digital working environment on your computer to do data science\nlearn to program in the data science languages R and python, and become able to learn new skills in these independently\ndo a data science project of your own interest"
  },
  {
    "objectID": "index.html#examination-and-assessment",
    "href": "index.html#examination-and-assessment",
    "title": "Data Science Concepts / Data Science Tools",
    "section": "7 Examination and Assessment",
    "text": "7 Examination and Assessment\n\n7.1 Concepts Module\nAssessment Type: Written Examination\nDuration: 120 min\nWeight: 100%\nScope: All intended learning outcomes of the module.\nCompletion: to pass this module, the examination has to be passed with at least 45%\nAn exam will take place after all lectures in December. The date will be published by the university adminstration later.\nThere are no additional achievements necessary and there are no bonus options.\n\n\n7.2 Tools Module\nModule achievement: 50% of the assignments correctly solved\nProgramming and analysis assignments will appear step by step during the courses.\nTo pass the module you have to solve half of them by the end of the semester.\nAssessment Type: Project Report\nLength: 4000 - 5000 words Weight: 100% Scope: All intended learning outcomes of the module.\nMore information of project formats and a rubric for the grading will be provided later.\nBonus option: Students receive 0.33 points grade improvements on their project grade (on the numerical grade as specified here https://constructor.university/sites/default/files/2023-02/Grading_Table_2023.pdf) when all assignments are solved by the end of the semester. (Note, the bonus is not necessary to reach the best grade in the module.)\nAll assignments and the final project must be delivered in personalized repositories in the GitHub organization https://github.com/CU-F23-MDSSB-01-Concepts-Tools."
  },
  {
    "objectID": "index.html#module-policies",
    "href": "index.html#module-policies",
    "title": "Data Science Concepts / Data Science Tools",
    "section": "8 Module Policies",
    "text": "8 Module Policies\nThere are no formal requirement about attendance and active participation. However, we rely on your engagement in a many-facted way including:\n\nPreparation (looking at readings and material before and after class, being informed about syllabus and course material)\nFocus (avoid distraction during in class and self-learning activities)\nPresence (listening and responding during group activities)\nAsking questions (in class, out of class, online, offline, when you get stuck conclude by writing a question)\nSpecificity (being as specific as possible when describing your problem or question)\nSynthesizing (making connections between concepts from reading and discussion)\nPersistence (you don‚Äôt need to understand everything immediately, but stay engaged, try again, confusion shows that you pay attention)"
  },
  {
    "objectID": "index.html#academic-integrity",
    "href": "index.html#academic-integrity",
    "title": "Data Science Concepts / Data Science Tools",
    "section": "9 Academic Integrity",
    "text": "9 Academic Integrity\nAll involved parties (professors and lecturers, instructors and students) are expected to abide by the word and spirit of the ‚ÄúCode of Academic Integrity‚Äù: https://constructor.university/student-life/student-services/university-policies/academic-policies/code-of-academic-integrity. Violations of the Code might be brought to the attention of the Academic Integrity Committee."
  },
  {
    "objectID": "index.html#artifical-intelligence-ai-use-policy",
    "href": "index.html#artifical-intelligence-ai-use-policy",
    "title": "Data Science Concepts / Data Science Tools",
    "section": "10 Artifical Intelligence (AI) Use Policy",
    "text": "10 Artifical Intelligence (AI) Use Policy\nThis policy covers any generative AI tool, such as ChatGPT, Elicit, etc. This includes text, code, slides, artwork/graphics/video/audio and other products.\nWe instructors encouraged to using and exploring AI tools for these purposes:\n\nLearning by dialog with a chatbot. AI chatbots can be very helpful to explain you concepts on your desired level and get a feeling about how certain topics are treated. You can ask for an easier or more detailed explanation or focus on certain aspects. Note: The capabilities are limited and you likely receive a lot of false information! Using chatbots should remain a small part of your learning process. Rule of thumb: Spend not more than 25% of the learing time with chatting. There is no way around reading textbooks, reading software documentation, learning and understanding concepts, searching for help online, asking instructors or fellow students.\nHave code snippets written. Tools like GitHub Copilot (free to use for students and teachers in VSCode) are heavily used and currently revolutionize code writting a bit. They can speed up writung your code. However, they do not deliver always correct solutions. There is no way around understanding yourself what a code is doing! Do not spend endless hours asking for new code with new prompts, spend time understanding a language and the functions and objects you are using! Copilots can be a great help to get a skeleton of code and an idea how your solution might look, they rarely deliver the complete code, expect that the code does not work, expect that the code seems to works but the results are wrong. You are 100% accountable for the code you produce, with or without the help of a copilot!\nHave a draft text snippet written. Data science is also about formulating and describing research questions, describing data, documenting code, interpreting results, and deriving conclusion form the results. This is all verbal text and chatbots are good in writing text which often appears as well readable. You can use this inspire you and to polish and improve your texts. However, you are 100% accountable for the text you deliver. You are expected to know what your text is about and to be able to answer questions about what your text means! Text generated purely by chatbots, it often becomes evident that you do not. We consider such cases worse than incomplete but sensible text. Also text written by chatbots is often very generic and less specific. In general, we value more specific text higher than generic text. Large parts of very generic text is considered worse than a shorter more specific text. In extreme case, we may a long very generic text will be considered worse than no text at all\nNote: Philosophical and legal questions around the training and use of chatbots and code copilots are controversially contested and re-examined constantly! We encourage to engage with such questions and become aware of arguments and debates.\n\nIf any part of this AI policy is confusing or uncertain, please reach out to us for a conversation before submitting your work."
  },
  {
    "objectID": "index.html#schedule-and-homework",
    "href": "index.html#schedule-and-homework",
    "title": "Data Science Concepts / Data Science Tools",
    "section": "11 Schedule and Homework",
    "text": "11 Schedule and Homework\nThe Schedule is on an extra page and will be updated continuously with\n\nLinks to slides\nNote on what homework you are expected to do\nSome questions which you should be able to answer after each week. Test yourself.\n\nHomework page will successively appear as extra pages. See the sidebar to the left."
  },
  {
    "objectID": "index.html#feedback-from-students",
    "href": "index.html#feedback-from-students",
    "title": "Data Science Concepts / Data Science Tools",
    "section": "12 Feedback from Students",
    "text": "12 Feedback from Students\nWe are eager to constantly improve the quality of our teaching. We would be glad to obtain your feedback at any time of the course to improve your learning experience."
  },
  {
    "objectID": "benford .html",
    "href": "benford .html",
    "title": "Data Science Concepts / Data Science Tools",
    "section": "",
    "text": "This is an excersise combining knowledge about logarithms and probability distributions and a statistical test.\nExercise: Analyzing Data with Benford‚Äôs Law in R\nBackground: Benford‚Äôs Law, also known as the First-Digit Law, is a phenomenon where in many naturally occurring datasets, the leading digit (i.e., the first digit) is more likely to be small, such as 1, 2, or 3, than it is to be large, such as 8 or 9. This law has applications in fraud detection, financial auditing, and data integrity verification.\nTask: You are given a dataset in a CSV file named data.csv. Your task is to perform the following steps using R and data analytics libraries to determine if the dataset follows Benford‚Äôs Law:\nData Loading: Read the data from data.csv into a data frame using read.csv().\n\nData Exploration: Explore the dataset to understand its structure and contents. Display summary statistics, and visualize the distribution of the first digits in the dataset using a histogram.\n\nCalculate Expected Benford's Law Frequencies: Calculate the expected frequency of each first digit (1 through 9) according to Benford's Law. You can use the formula:\n\nP(d)=log‚Å°10(d+1)‚àílog‚Å°10(d)P(d)=log10‚Äã(d+1)‚àílog10‚Äã(d)\n\nWhere P(d)P(d) is the expected proportion of numbers starting with digit dd.\n\nCompare Observed vs. Expected Frequencies: Calculate the observed frequency of each first digit in the dataset. Compare the observed frequencies with the expected frequencies from Benford's Law. Create a bar chart or similar visualization to illustrate the comparison.\n\nHypothesis Testing: Perform a statistical hypothesis test to determine if the dataset significantly deviates from Benford's Law. You can use a chi-squared goodness-of-fit test to assess the deviation.\n\nConclusion: Based on the results of your analysis, draw conclusions about whether the dataset follows or deviates from Benford's Law. Explain your findings and their implications.\nNote:\nYou may assume that the dataset contains numerical values.\nYou can use R packages like readr for data reading, and ggplot2 for data visualization.\nInclude comments in your code to explain your approach and calculations.\nProvide clear visualizations and explanations in your final report.\nBonus (Optional): If you‚Äôd like to extend this exercise, you can consider applying Benford‚Äôs Law to more complex datasets or exploring other variations of the law, such as the Second-Digit Law or the Benford‚Äôs Law for Two-Digit Numbers using R."
  }
]